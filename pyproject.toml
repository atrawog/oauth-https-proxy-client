[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "oauth-https-proxy-client"
version = "0.1.0"
description = "A comprehensive CLI client for OAuth HTTPS Proxy management with TLS/ACME support"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "OAuth Proxy Team", email = "admin@example.com"},
]
maintainers = [
    {name = "OAuth Proxy Team", email = "admin@example.com"},
]
keywords = [
    "oauth",
    "proxy",
    "https",
    "http",
    "tls",
    "cli",
    "client",
    "mcp",
    "acme",
    "certificate",
    "reverse-proxy"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

dependencies = [
    "click>=8.1.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "tabulate>=0.9.0",
    "pydantic>=2.0.0",
    "websockets>=11.0",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.0.0;python_version<'3.10'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.22.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-click>=4.4.0",
    "autodoc-pydantic>=2.0.0",
    "myst-parser>=1.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.22.0",
    "responses>=0.23.0",
    "faker>=18.0.0",
]

[project.urls]
Homepage = "https://github.com/atrawog/oauth-https-proxy-client"
Documentation = "https://oauth-https-proxy-client.readthedocs.io"
Repository = "https://github.com/atrawog/oauth-https-proxy-client.git"
"Bug Tracker" = "https://github.com/atrawog/oauth-https-proxy-client/issues"
Changelog = "https://github.com/atrawog/oauth-https-proxy-client/blob/main/CHANGELOG.md"

[project.scripts]
proxy-client = "oauth_proxy_client.cli:main"
oauth-proxy = "oauth_proxy_client.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["oauth_proxy_client*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
oauth_proxy_client = [
    "py.typed",
    "templates/*.yaml",
    "templates/*.json",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "S",    # flake8-bandit
    "A",    # flake8-builtins
    "DTZ",  # flake8-datetimez
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "PT",   # flake8-pytest-style
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PLC",  # pylint convention
    "PLE",  # pylint error
    "PLW",  # pylint warning
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert detected
    "S603",  # subprocess without shell equals true
]
exclude = [
    ".git",
    ".tox",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    "migrations",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "ARG", "PLR2004"]
"src/oauth_proxy_client/cli.py" = ["B008"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=oauth_proxy_client",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "requires_auth: marks tests that require authentication",
    "requires_docker: marks tests that require Docker",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/oauth_proxy_client"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310,311,312},lint,type,docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    pytest-httpx>=0.22.0
commands =
    pytest {posargs}

[testenv:lint]
deps =
    black>=23.0.0
    ruff>=0.1.0
commands =
    black --check src tests
    ruff check src tests

[testenv:type]
deps =
    mypy>=1.0.0
    types-python-dateutil
    types-pyyaml
    types-tabulate
commands =
    mypy src

[testenv:docs]
deps =
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-click>=4.4.0
    myst-parser>=1.0.0
commands =
    sphinx-build -W -b html docs docs/_build/html
"""